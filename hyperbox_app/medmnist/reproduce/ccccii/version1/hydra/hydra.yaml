hydra:
  run:
    dir: logs/runs/${hydra.job.name}/${now:%Y-%m-%d_%H-%M-%S}
  sweep:
    dir: logs/multiruns/${hydra.job.name}/${now:%Y-%m-%d_%H-%M-%S}
    subdir: ${hydra.job.num}
  launcher:
    _target_: hydra._internal.core_plugins.basic_launcher.BasicLauncher
  sweeper:
    _target_: hydra._internal.core_plugins.basic_sweeper.BasicSweeper
    max_batch_size: null
  help:
    app_name: ${hydra.job.name}
    header: '${hydra.help.app_name} is powered by Hydra.

      '
    footer: 'Powered by Hydra (https://hydra.cc)

      Use --hydra-help to view Hydra specific help

      '
    template: '${hydra.help.header}

      == Configuration groups ==

      Compose your configuration from those groups (group=option)


      $APP_CONFIG_GROUPS


      == Config ==

      Override anything in the config (foo.bar=value)


      $CONFIG


      ${hydra.help.footer}

      '
  hydra_help:
    template: 'Hydra (${hydra.runtime.version})

      See https://hydra.cc for more info.


      == Flags ==

      $FLAGS_HELP


      == Configuration groups ==

      Compose your configuration from those groups (For example, append hydra/job_logging=disabled
      to command line)


      $HYDRA_CONFIG_GROUPS


      Use ''--cfg hydra'' to Show the Hydra config.

      '
    hydra_help: ???
  hydra_logging:
    version: 1
    formatters:
      colorlog:
        (): colorlog.ColoredFormatter
        format: '[%(cyan)s%(asctime)s%(reset)s][%(purple)sHYDRA%(reset)s] %(message)s'
    handlers:
      console:
        class: logging.StreamHandler
        formatter: colorlog
        stream: ext://sys.stdout
    root:
      level: INFO
      handlers:
      - console
    disable_existing_loggers: false
  job_logging:
    version: 1
    formatters:
      simple:
        format: '[%(asctime)s][%(name)s][%(levelname)s] - %(message)s'
      colorlog:
        (): colorlog.ColoredFormatter
        format: '[%(cyan)s%(asctime)s%(reset)s][%(blue)s%(name)s%(reset)s][%(log_color)s%(levelname)s%(reset)s]
          - %(message)s'
        log_colors:
          DEBUG: purple
          INFO: green
          WARNING: yellow
          ERROR: red
          CRITICAL: red
    handlers:
      console:
        class: logging.StreamHandler
        formatter: colorlog
        stream: ext://sys.stdout
      file:
        class: logging.FileHandler
        formatter: simple
        filename: ${hydra.job.name}.log
    root:
      level: INFO
      handlers:
      - console
      - file
    disable_existing_loggers: false
  env: {}
  searchpath:
  - file:///home/comp/18481086/code/hyperbox_app/hyperbox_app/medmnist/configs
  callbacks: {}
  output_subdir: .hydra
  overrides:
    hydra:
    - hydra.searchpath=[file:///home/comp/18481086/code/hyperbox_app/hyperbox_app/medmnist/configs]
    - hydra.job.name=covid19_finetune_ccccii_gpu1
    task:
    - experiment=finetune_ccccii
    - logger.wandb.name=covid19_finetune_ccccii_gpu1
    - +datamodule.use_weighted_sampler=False
    - trainer.gpus=1
    - trainer.accelerator=gpu
    - trainer.max_epochs=100
    - callbacks.model_checkpoint.save_top_k=2
    - model/loss_cfg=cross_entropy_labelsmooth
    - model/network_cfg=dambv3_covid19
    - +model.network_cfg.first_stride=1
    - model.network_cfg.stride_stages=[2,2,2,2,2,1]
    - model.network_cfg.mask=/home/comp/18481086/code/hyperbox_app/logs/runs/searchMBV2_gdas_iran_gpu1/2022-01-30_13-26-47/mask_json/mask_epoch_15.json
    - +model.network_cfg.input_channel=16
    - +model.network_cfg.ignore_keys=[invert,gauNoise]
  job:
    name: covid19_finetune_ccccii_gpu1
    override_dirname: +datamodule.use_weighted_sampler=False,+model.network_cfg.first_stride=1,+model.network_cfg.ignore_keys=[invert,gauNoise],+model.network_cfg.input_channel=16,callbacks.model_checkpoint.save_top_k=2,experiment=finetune_ccccii,logger.wandb.name=covid19_finetune_ccccii_gpu1,model.network_cfg.mask=/home/comp/18481086/code/hyperbox_app/logs/runs/searchMBV2_gdas_iran_gpu1/2022-01-30_13-26-47/mask_json/mask_epoch_15.json,model.network_cfg.stride_stages=[2,2,2,2,2,1],model/loss_cfg=cross_entropy_labelsmooth,model/network_cfg=dambv3_covid19,trainer.accelerator=gpu,trainer.gpus=1,trainer.max_epochs=100
    id: ???
    num: ???
    config_name: config.yaml
    env_set:
      EXAMPLE_VAR: example_value
    env_copy: []
    config:
      override_dirname:
        kv_sep: '='
        item_sep: ','
        exclude_keys: []
  runtime:
    version: 1.1.0.rc1
    cwd: /home/comp/18481086/code/hyperbox_app
    config_sources:
    - path: hydra.conf
      schema: pkg
      provider: hydra
    - path: /home/comp/18481086/code/hyperbox/hyperbox/configs
      schema: file
      provider: main
    - path: hydra_plugins.hydra_colorlog.conf
      schema: pkg
      provider: hydra-colorlog
    - path: /home/comp/18481086/code/hyperbox_app/hyperbox_app/medmnist/configs
      schema: file
      provider: hydra.searchpath in command-line
    - path: ''
      schema: structured
      provider: schema
    choices:
      experiment: finetune_ccccii
      hydra: default.yaml
      hparams_search: null
      logger: wandb.yaml
      callbacks: default.yaml
      datamodule: ccccii_datamodule.yaml
      model: finetune.yaml
      model/scheduler_cfg: CosineAnnealingLR.yaml
      model/loss_cfg: cross_entropy_labelsmooth
      model/metric_cfg: accuracy
      model/optimizer_cfg: adam.yaml
      model/mutator_cfg: random_mutator.yaml
      model/network_cfg: dambv3_covid19
      trainer: default.yaml
      hydra/env: default
      hydra/callbacks: null
      hydra/job_logging: colorlog
      hydra/hydra_logging: colorlog
      hydra/hydra_help: default
      hydra/help: default
      hydra/sweeper: basic
      hydra/launcher: basic
      hydra/output: default
  verbose: false
