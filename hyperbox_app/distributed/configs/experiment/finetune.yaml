# @package _global_

# to execute this experiment run:
# python run.py experiment=example_simple.yaml

defaults:
    - override /trainer: default.yaml # choose trainer from 'configs/trainer/'
    - override /model: finetune_model.yaml
    - override /datamodule: cifar10_datamodule.yaml
    - override /callbacks: default.yaml
    - override /logger: wandb.yaml
    - override /model/optimizer_cfg: adam.yaml
    - override /model/scheduler_cfg: CosineAnnealingLR.yaml
    - override /model/network_cfg: nasbench201.yaml

# all parameters below will be merged with parameters from default configurations set above
# this allows you to overwrite only specified parameters

seed: 666


trainer:
    min_epochs: 1
    max_epochs: 100
    accelerator: gpu
    strategy: ddp
    progress_bar_refresh_rate: 0
datamodule:
    batch_size: 128
    is_customized: False
model:
    _target_: hyperbox_app.distributed.models.finetune_model.FinetuneModel
    optimizer_cfg:
      lr: 0.001
    #   momentum: 0.9
    #   nesterov: True
      weight_decay: 0.0005
    mutator_cfg:
        _target_: hyperbox_app.distributed.mutator.fewshot_mutator.FewshotMutator
    network_cfg:
        _target_: hyperbox_app.distributed.networks.nasbench201.nasbench201.NASBench201Network
        mask: null
        # _target_: hyperbox_app.distributed.networks.nasbenchmb.network.NASBenchMBNet
logger:
    wandb:
        project: "distributed"
        offline: False
callbacks:
    model_checkpoint:
        monitor: "val/acc" # name of the logged metric which determines when model is improving
        save_top_k: 1 # save k best models (determined by above metric)
